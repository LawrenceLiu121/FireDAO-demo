import{s as r}from"./strict-uri-encode.725b5ed5.js";import{d as e}from"./decode-uri-component.4cf187fa.js";import{s as t}from"./split-on-first.3754ef4a.js";var n={};!function(n){const o=r,a=e,s=t;function i(r){if("string"!=typeof r||1!==r.length)throw new TypeError("arrayFormatSeparator must be single character string")}function c(r,e){return e.encode?e.strict?o(r):encodeURIComponent(r):r}function u(r,e){return e.decode?a(r):r}function l(r){return Array.isArray(r)?r.sort():"object"==typeof r?l(Object.keys(r)).sort(((r,e)=>Number(r)-Number(e))).map((e=>r[e])):r}function p(r){const e=r.indexOf("#");return-1!==e&&(r=r.slice(0,e)),r}function f(r){const e=(r=p(r)).indexOf("?");return-1===e?"":r.slice(e+1)}function m(r,e){return e.parseNumbers&&!Number.isNaN(Number(r))&&"string"==typeof r&&""!==r.trim()?r=Number(r):!e.parseBooleans||null===r||"true"!==r.toLowerCase()&&"false"!==r.toLowerCase()||(r="true"===r.toLowerCase()),r}function y(r,e){i((e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e)).arrayFormatSeparator);const t=function(r){let e;switch(r.arrayFormat){case"index":return(r,t,n)=>{e=/\[(\d*)\]$/.exec(r),r=r.replace(/\[\d*\]$/,""),e?(void 0===n[r]&&(n[r]={}),n[r][e[1]]=t):n[r]=t};case"bracket":return(r,t,n)=>{e=/(\[\])$/.exec(r),r=r.replace(/\[\]$/,""),e?void 0!==n[r]?n[r]=[].concat(n[r],t):n[r]=[t]:n[r]=t};case"comma":case"separator":return(e,t,n)=>{const o="string"==typeof t&&t.split("").indexOf(r.arrayFormatSeparator)>-1?t.split(r.arrayFormatSeparator).map((e=>u(e,r))):null===t?t:u(t,r);n[e]=o};default:return(r,e,t)=>{void 0!==t[r]?t[r]=[].concat(t[r],e):t[r]=e}}}(e),n=Object.create(null);if("string"!=typeof r)return n;if(!(r=r.trim().replace(/^[?#&]/,"")))return n;for(const o of r.split("&")){let[r,a]=s(e.decode?o.replace(/\+/g," "):o,"=");a=void 0===a?null:["comma","separator"].includes(e.arrayFormat)?a:u(a,e),t(u(r,e),a,n)}for(const o of Object.keys(n)){const r=n[o];if("object"==typeof r&&null!==r)for(const t of Object.keys(r))r[t]=m(r[t],e);else n[o]=m(r,e)}return!1===e.sort?n:(!0===e.sort?Object.keys(n).sort():Object.keys(n).sort(e.sort)).reduce(((r,e)=>{const t=n[e];return Boolean(t)&&"object"==typeof t&&!Array.isArray(t)?r[e]=l(t):r[e]=t,r}),Object.create(null))}n.extract=f,n.parse=y,n.stringify=(r,e)=>{if(!r)return"";i((e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e)).arrayFormatSeparator);const t=t=>e.skipNull&&null==r[t]||e.skipEmptyString&&""===r[t],n=function(r){switch(r.arrayFormat){case"index":return e=>(t,n)=>{const o=t.length;return void 0===n||r.skipNull&&null===n||r.skipEmptyString&&""===n?t:null===n?[...t,[c(e,r),"[",o,"]"].join("")]:[...t,[c(e,r),"[",c(o,r),"]=",c(n,r)].join("")]};case"bracket":return e=>(t,n)=>void 0===n||r.skipNull&&null===n||r.skipEmptyString&&""===n?t:null===n?[...t,[c(e,r),"[]"].join("")]:[...t,[c(e,r),"[]=",c(n,r)].join("")];case"comma":case"separator":return e=>(t,n)=>null==n||0===n.length?t:0===t.length?[[c(e,r),"=",c(n,r)].join("")]:[[t,c(n,r)].join(r.arrayFormatSeparator)];default:return e=>(t,n)=>void 0===n||r.skipNull&&null===n||r.skipEmptyString&&""===n?t:null===n?[...t,c(e,r)]:[...t,[c(e,r),"=",c(n,r)].join("")]}}(e),o={};for(const s of Object.keys(r))t(s)||(o[s]=r[s]);const a=Object.keys(o);return!1!==e.sort&&a.sort(e.sort),a.map((t=>{const o=r[t];return void 0===o?"":null===o?c(t,e):Array.isArray(o)?o.reduce(n(t),[]).join("&"):c(t,e)+"="+c(o,e)})).filter((r=>r.length>0)).join("&")},n.parseUrl=(r,e)=>{e=Object.assign({decode:!0},e);const[t,n]=s(r,"#");return Object.assign({url:t.split("?")[0]||"",query:y(f(r),e)},e&&e.parseFragmentIdentifier&&n?{fragmentIdentifier:u(n,e)}:{})},n.stringifyUrl=(r,e)=>{e=Object.assign({encode:!0,strict:!0},e);const t=p(r.url).split("?")[0]||"",o=n.extract(r.url),a=n.parse(o,{sort:!1}),s=Object.assign(a,r.query);let i=n.stringify(s,e);i&&(i=`?${i}`);let u=function(r){let e="";const t=r.indexOf("#");return-1!==t&&(e=r.slice(t)),e}(r.url);return r.fragmentIdentifier&&(u=`#${c(r.fragmentIdentifier,e)}`),`${t}${i}${u}`}}(n);export{n as q};
