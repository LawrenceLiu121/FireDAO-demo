import{r as e,R as t}from"./react.49c1050d.js";import{R as s}from"./react-dom.2dd30cd6.js";import{p as r,v as a,E as o,K as i,z as c,f as n,b as l}from"./@thirdweb-dev.c5d728f7.js";import{c as m}from"./wagmi.92559d97.js";import"./object-assign.9840bf7d.js";import"./scheduler.8e2f5ae7.js";import"./cross-fetch.a0a11bb5.js";import"./tiny-invariant.58a6ef66.js";import"./ethers.0617a366.js";import"./@ethersproject.8518e02e.js";import"./bech32.0161db04.js";import"./js-sha3.5a5bea04.js";import"./bn.js.26371cc4.js";import"./keccak256.f874be79.js";import"./base64-js.a9452b62.js";import"./ieee754.e4585898.js";import"./keccak.6dfec3d0.js";import"./readable-stream.99890bd7.js";import"./events.a9b49b88.js";import"./buffer.a1957365.js";import"./inherits.d1f17cfc.js";import"./util-deprecate.9994f065.js";import"./string_decoder.d4dd6a67.js";import"./hash.js.80586beb.js";import"./minimalistic-assert.2f00d150.js";import"./scrypt-js.54be4e63.js";import"./zod.e1a7709b.js";import"./eventemitter2.b32ef4b0.js";import"./merkletreejs.8c970765.js";import"./buffer-reverse.f714979d.js";import"./crypto-js.ce164af7.js";import"./treeify.84ad14c1.js";import"./deep-equal.bf993947.js";import"./object-keys.8a8a84a6.js";import"./is-arguments.8ead4e95.js";import"./has-tostringtag.0722ba29.js";import"./has-symbols.668da340.js";import"./call-bind.4cbdc4a9.js";import"./get-intrinsic.d7b36144.js";import"./function-bind.cb3858f2.js";import"./has.c1051c46.js";import"./object-is.bc6ca093.js";import"./define-properties.ad07f72c.js";import"./is-regex.1755419f.js";import"./regexp.prototype.flags.2ae1c484.js";import"./isarray.396bc49a.js";import"./is-date-object.26354e89.js";import"./which-boxed-primitive.3eed4ff6.js";import"./is-string.7dc61124.js";import"./is-number-object.2824aca8.js";import"./is-boolean-object.a21df8a9.js";import"./is-symbol.d2fc765f.js";import"./is-bigint.e800c7ab.js";import"./has-bigints.7b7df0bd.js";import"./which-collection.074a6be5.js";import"./is-map.080e426a.js";import"./is-set.70a5ffec.js";import"./is-weakmap.b8d9e2ca.js";import"./is-weakset.27b555cd.js";import"./es-get-iterator.2301b34c.js";import"./side-channel.ef4f5b58.js";import"./object-inspect.0c6bd62a.js";import"./which-typed-array.7a97f5d7.js";import"./foreach.ca0366f9.js";import"./available-typed-arrays.5f64a8a7.js";import"./es-abstract.14c0589b.js";import"./is-typed-array.2f7dba40.js";import"./object.assign.f6b0c76e.js";import"./uuid.29f3d315.js";import"./mime.52ae446f.js";import"./react-cool-dimensions.06e51035.js";import"./react-icons.c0a86520.js";import"./swr.f6d132bc.js";import"./wagmi-core.18b92cca.js";import"./eventemitter3.dc5195d7.js";import"./@walletconnect.3982915e.js";import"./is-typedarray.90714367.js";import"./query-string.5f3c4763.js";import"./strict-uri-encode.725b5ed5.js";import"./decode-uri-component.4cf187fa.js";import"./split-on-first.3754ef4a.js";import"./typedarray-to-buffer.cb2421e0.js";import"./detect-browser.04f03769.js";import"./qrcode.0c350149.js";import"./dijkstrajs.d3a33a03.js";import"./copy-to-clipboard.91f73d5f.js";import"./toggle-selection.b84dd588.js";import"./preact.73e553d5.js";import"./walletlink.63ac1a94.js";import"./@metamask.36686bb8.js";import"./eth-rpc-errors.66fe6329.js";import"./fast-safe-stringify.cbdf62a8.js";import"./js-sha256.a1f92e49.js";import"./rxjs.c32cd131.js";import"./eth-block-tracker.50d460e9.js";import"./eth-query.5602d7fb.js";import"./xtend.45b7f156.js";import"./json-rpc-random-id.51bc6534.js";import"./safe-event-emitter.8d8ed67c.js";import"./util.076080fa.js";import"./is-generator-function.adf285e2.js";import"./pify.8425b695.js";import"./eth-json-rpc-filters.cbbba36f.js";import"./eth-json-rpc-middleware.a176373a.js";import"./json-rpc-engine.a44b768a.js";import"./async-mutex.e61528bb.js";import"./tslib.80f66652.js";import"./clsx.3e11e14e.js";import"./bind-decorator.dbd53fa5.js";const p=()=>{const t=r(),s=m(),l=a();console.log("ðŸ‘‹ Address:",t);const p=o("0x861f9FBA2A40E85EbDd2023b0F56113C3CEB6B0D"),d=i("0x1635e830f616E123eE1F7980a325ca0b8895eC2B"),j=c("0x633eeaf941885CFf0680e9602576bf93C9A62011"),[b,f]=e.exports.useState(!1),[u,h]=e.exports.useState(!1),[y,g]=e.exports.useState([]),[E,R]=e.exports.useState([]),[v,w]=e.exports.useState([]),[k,x]=e.exports.useState(!1),[A,F]=e.exports.useState(!1);e.exports.useEffect((()=>{if(!b)return;(async()=>{try{const e=await j.getAll();w(e)}catch(e){console.log("failed to get proposals",e)}})()}),[b,j]),e.exports.useEffect((()=>{if(!b)return;if(!v.length)return;(async()=>{try{const e=await j.hasVoted(v[0].proposalId,t);F(e),e?console.log("ðŸ¥µ User has already voted"):console.log("ðŸ™‚ User has not voted yet")}catch(e){console.error("Failed to check if wallet has voted",e)}})()}),[b,v,t,j]),e.exports.useEffect((()=>{if(!b)return;(async()=>{try{const e=await p.history.getAllClaimerAddresses(0);R(e),console.log("ðŸš€ Members addresses",e)}catch(e){console.error("failed to get member list",e)}})()}),[b,p.history]),e.exports.useEffect((()=>{if(!b)return;(async()=>{try{const e=await d.history.getAllHolderBalances();g(e),console.log("ðŸ‘œ Amounts",e)}catch(e){console.error("failed to get member balances",e)}})()}),[b,d.history]);const C=e.exports.useMemo((()=>E.map((e=>{const t=null==y?void 0:y.find((({holder:t})=>t===e));return{address:e,tokenAmount:(null==t?void 0:t.balance.displayValue)||"0"}}))),[E,y]);e.exports.useEffect((()=>{if(!t)return;(async()=>{try{(await p.balanceOf(t,0)).gt(0)?(f(!0),console.log("ðŸŒŸ this user has a membership NFT!")):(f(!1),console.log("ðŸ˜­ this user doesn't have a membership NFT."))}catch(e){f(!1),console.error("Failed to get balance",e)}})()}),[t,p]);return t?(null==s?void 0:s[0].data.chain.id)!==n.Rinkeby?React.createElement("div",{className:"unsupported-network"},React.createElement("h2",null,"Please connect to Rinkeby"),React.createElement("p",null,"This dapp only works on the Rinkeby network, please switch networks in your connected wallet.")):b?React.createElement("div",{className:"member-page"},React.createElement("h1",null,"FireDAO Member Page"),React.createElement("p",null,"Congratulations on being a member"),React.createElement("div",null,React.createElement("div",null,React.createElement("h2",null,"Member List"),React.createElement("table",{className:"card"},React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"Address"),React.createElement("th",null,"Token Amount"))),React.createElement("tbody",null,C.map((e=>{return React.createElement("tr",{key:e.address},React.createElement("td",null,(t=e.address).substring(0,6)+"..."+t.substring(t.length-4)),React.createElement("td",null,e.tokenAmount));var t}))))),React.createElement("div",null,React.createElement("h2",null,"Active Proposals"),React.createElement("form",{onSubmit:async e=>{e.preventDefault(),e.stopPropagation(),x(!0);const s=v.map((e=>{const t={proposalId:e.proposalId,vote:2};return e.votes.forEach((s=>{document.getElementById(e.proposalId+"-"+s.type).checked&&(t.vote=s.type)})),t}));try{await d.getDelegationOf(t)===AddressZero&&await d.delegateTo(t);try{await Promise.all(s.map((async({proposalId:e,vote:t})=>{if(1===(await j.get(e)).state)return j.vote(e,t)})));try{await Promise.all(s.map((async({proposalId:e})=>{if(4===(await j.get(e)).state)return j.execute(e)}))),F(!0),console.log("successfully voted")}catch(r){console.error("failed to execute votes",r)}}catch(r){console.error("failed to vote",r)}}catch(r){console.error("failed to delegate tokens")}finally{x(!1)}}},v.map((e=>React.createElement("div",{key:e.proposalId,className:"card"},React.createElement("h5",null,e.description),React.createElement("div",null,e.votes.map((({type:t,label:s})=>React.createElement("div",{key:t},React.createElement("input",{type:"radio",id:e.proposalId+"-"+t,name:e.proposalId,value:t,defaultChecked:2===t}),React.createElement("label",{htmlFor:e.proposalId+"-"+t},s)))))))),React.createElement("button",{disabled:k||A,type:"submit"},k?"Voting...":A?"You Already Voted":"Submit Votes"),!A&&React.createElement("small",null,"This will trigger multiple transactions that you will need to sign."))))):React.createElement("div",{className:"mint-nft"},React.createElement("h1",null,"Mint your free ðŸ”¥DAO Membership NFT"),React.createElement("button",{disabled:u,onClick:async()=>{try{h(!0),await p.claim("0",1),console.log(`ðŸŒŠ Successfully Minted! Check it out on OpenSea: https://testnets.opensea.io/assets/${p.getAddress()}/0`),f(!0)}catch(e){f(!1),console.error("Failed to mint NFT",e)}finally{h(!1)}}},u?"Minting...":"Mint your nft (FREE)")):React.createElement("div",{className:"landing"},React.createElement("h",null,"Welcome to FireDAO"),React.createElement("button",{onClick:l,className:"btn-hero"},"Connect your wallet"))},d=n.Rinkeby;s.render(t.createElement(t.StrictMode,null,t.createElement(l,{desiredChainId:d},t.createElement(p,null))),document.getElementById("root"));
