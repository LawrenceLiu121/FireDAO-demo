var e,t,n,s,i,r,o,a=Object.defineProperty,c=Object.defineProperties,h=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t,n)=>(u(e,"symbol"!=typeof t?t+"":t,n),n),g=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},w=(e,t,n)=>(g(e,t,"read from private field"),n?n.call(e):t.get(e)),v=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},y=(e,t,n,s)=>(g(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);import{Z as C}from"./@ethersproject.8518e02e.js";import{u as b}from"./ethers.0617a366.js";import{E as f}from"./eventemitter3.dc5195d7.js";import{W as E}from"./@walletconnect.3982915e.js";import{d as A}from"./walletlink.63ac1a94.js";const k={mainnet:{id:1,name:"Mainnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.infura.io/v3"],blockExplorers:[{name:"Etherscan",url:"https://etherscan.io"}]},ropsten:{id:3,name:"Ropsten",nativeCurrency:{name:"Ropsten Ether",symbol:"ropETH",decimals:18},rpcUrls:["https://ropsten.infura.io/v3"],blockExplorers:[{name:"Etherscan",url:"https://ropsten.etherscan.io"}],testnet:!0},rinkeby:{id:4,name:"Rinkeby",nativeCurrency:{name:"Rinkeby Ether",symbol:"rETH",decimals:18},rpcUrls:["https://rinkeby.infura.io/v3"],blockExplorers:[{name:"Etherscan",url:"https://rinkeby.etherscan.io"}],testnet:!0},goerli:{id:5,name:"Goerli",nativeCurrency:{name:"Goerli Ether",symbol:"gETH",decimals:18},rpcUrls:["https://goerli.infura.io/v3"],blockExplorers:[{name:"Etherscan",url:"https://goerli.etherscan.io"}],testnet:!0},kovan:{id:42,name:"Kovan",nativeCurrency:{name:"Kovan Ether",symbol:"kETH",decimals:18},rpcUrls:["https://kovan.infura.io/v3"],blockExplorers:[{name:"Etherscan",url:"https://kovan.etherscan.io"}],testnet:!0},optimism:{id:10,name:"Optimism",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:["https://mainnet.optimism.io"],blockExplorers:[{name:"Etherscan",url:"https://optimistic.etherscan.io"}]},optimismKovan:{id:69,name:"Optimism Kovan",nativeCurrency:{name:"Kovan Ether",symbol:"KOR",decimals:18},rpcUrls:["https://kovan.optimism.io"],blockExplorers:[{name:"Etherscan",url:"https://kovan-optimistic.etherscan.io"}],testnet:!0},polygonMainnet:{id:137,name:"Polygon Mainnet",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://polygon-rpc.com","https://rpc-mainnet.matic.network","https://matic-mainnet.chainstacklabs.com","https://rpc-mainnet.maticvigil.com","https://rpc-mainnet.matic.quiknode.pro","https://matic-mainnet-full-rpc.bwarelabs.com"],blockExplorers:[{name:"Polygonscan",url:"https://polygonscan.com"}]},polygonTestnetMumbai:{id:80001,name:"Mumbai",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://matic-mumbai.chainstacklabs.com","https://rpc-mumbai.maticvigil.com","https://matic-testnet-archive-rpc.bwarelabs.com"],blockExplorers:[{name:"Polygonscan",url:"https://mumbai.polygonscan.com"}],testnet:!0},arbitrumOne:{id:42161,name:"Arbitrum One",nativeCurrency:{name:"Ether",symbol:"AETH",decimals:18},rpcUrls:["https://arb1.arbitrum.io/rpc"],blockExplorers:[{name:"Arbiscan",url:"https://arbiscan.io"},{name:"Arbitrum Explorer",url:"https://explorer.arbitrum.io"}]},arbitrumRinkeby:{id:421611,name:"Arbitrum Rinkeby",nativeCurrency:{name:"Arbitrum Rinkeby Ether",symbol:"ARETH",decimals:18},rpcUrls:["https://rinkeby.arbitrum.io/rpc"],blockExplorers:[{name:"Arbitrum Explorer",url:"https://rinkeby-explorer.arbitrum.io"}],testnet:!0},avalanche:{id:43114,name:"Avalanche Mainnet",nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},rpcUrls:["https://api.avax.network/ext/bc/C/rpc"],blockExplorers:[{name:"SnowTrace",url:"https://snowtrace.io"}],testnet:!1},avalancheFuji:{id:43113,name:"Avalanche Fuji Testnet",nativeCurrency:{name:"Avalanche",symbol:"AVAX",decimals:18},rpcUrls:["https://api.avax-test.network/ext/bc/C/rpc"],blockExplorers:[{name:"SnowTrace",url:"https://testnet.snowtrace.io"}],testnet:!0},localhost:{id:1337,name:"Localhost",rpcUrls:["https://127.0.0.1:8545"]},hardhat:{id:31337,name:"Hardhat",rpcUrls:["http://127.0.0.1:8545"]}},x=Object.values(k),P=[k.mainnet,k.ropsten,k.rinkeby,k.goerli,k.kovan],I=e=>"string"==typeof e?Number.parseInt(e,"0x"===e.trim().substring(0,2)?16:10):e;class U extends Error{constructor(){super(...arguments),p(this,"name","AddChainError"),p(this,"message","Error adding chain")}}class S extends Error{constructor(){super(...arguments),p(this,"name","ChainNotConfigured"),p(this,"message","Chain not configured")}}class j extends Error{constructor(){super(...arguments),p(this,"name","ConnectorAlreadyConnectedError"),p(this,"message","Connector already connected")}}class T extends Error{constructor(){super(...arguments),p(this,"name","ConnectorNotFoundError"),p(this,"message","Connector not found")}}class M extends Error{constructor(){super(...arguments),p(this,"name","SwitchChainError"),p(this,"message","Error switching chain")}}class D extends Error{constructor(){super(...arguments),p(this,"name","UserRejectedRequestError"),p(this,"message","User rejected request")}}class q extends f{constructor({chains:e=P,options:t}){super(),this.chains=e,this.options=t}isChainUnsupported(e){return!this.chains.some((t=>t.id===e))}}const O="wagmi.shimDisconnect";class W extends q{constructor(t){var n,s;super((n=((e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(d)for(var n of d(t))m.call(t,n)&&u(e,n,t[n]);return e})({},t),s={options:null==t?void 0:t.options},c(n,h(s)))),p(this,"id","injected"),p(this,"ready","undefined"!=typeof window&&!!window.ethereum),v(this,e,void 0),p(this,"onAccountsChanged",(e=>{0===e.length?this.emit("disconnect"):this.emit("change",{account:b.getAddress(e[0])})})),p(this,"onChainChanged",(e=>{const t=I(e),n=this.isChainUnsupported(t);this.emit("change",{chain:{id:t,unsupported:n}})})),p(this,"onDisconnect",(()=>{var e;this.emit("disconnect"),(null==(e=this.options)?void 0:e.shimDisconnect)&&"undefined"!=typeof localStorage&&localStorage.removeItem(O)}));let i="Injected";var r;"undefined"!=typeof window&&(i=(r=window.ethereum)?r.isMetaMask?"MetaMask":r.isCoinbaseWallet?"Coinbase Wallet":r.isFrame?"Frame":r.isTally?"Tally":"Injected":"Injected"),this.name=i}async connect(){var e,t;try{const n=this.getProvider();if(!n)throw new T;n.on&&(n.on("accountsChanged",this.onAccountsChanged),n.on("chainChanged",this.onChainChanged),(null==(e=this.options)?void 0:e.shimChainChangedDisconnect)||n.on("disconnect",this.onDisconnect));const s=await this.getAccount(),i=await this.getChainId(),r=this.isChainUnsupported(i);return(null==(t=this.options)?void 0:t.shimDisconnect)&&"undefined"!=typeof localStorage&&localStorage.setItem(O,"true"),{account:s,chain:{id:i,unsupported:r},provider:n}}catch(n){if(4001===n.code)throw new D;throw n}}async disconnect(){var e;const t=this.getProvider();(null==t?void 0:t.removeListener)&&(t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),(null==(e=this.options)?void 0:e.shimDisconnect)&&"undefined"!=typeof localStorage&&localStorage.removeItem(O))}async getAccount(){const e=this.getProvider();if(!e)throw new T;const t=await e.request({method:"eth_requestAccounts"});return b.getAddress(t[0])}async getChainId(){const e=this.getProvider();if(!e)throw new T;return await e.request({method:"eth_chainId"}).then(I)}getProvider(){return"undefined"!=typeof window&&window.ethereum&&y(this,e,window.ethereum),w(this,e)}async getSigner(){const e=this.getProvider(),t=await this.getAccount();return new C(e).getSigner(t)}async isAuthorized(){var e;try{if((null==(e=this.options)?void 0:e.shimDisconnect)&&"undefined"!=typeof localStorage&&!localStorage.getItem(O))return!1;const t=this.getProvider();if(!t)throw new T;const n=await t.request({method:"eth_accounts"});return!!n[0]}catch{return!1}}async switchChain(e){var t;const n=this.getProvider();if(!n)throw new T;const s=b.hexValue(e);try{await n.request({method:"wallet_switchEthereumChain",params:[{chainId:s}]});return[...this.chains,...x].find((t=>t.id===e))}catch(i){if(4902!==i.code)throw 4001===i.code?new D:new M;try{const i=this.chains.find((t=>t.id===e));if(!i)throw new S;return await n.request({method:"wallet_addEthereumChain",params:[{chainId:s,chainName:i.name,nativeCurrency:i.nativeCurrency,rpcUrls:i.rpcUrls,blockExplorerUrls:null==(t=i.blockExplorers)?void 0:t.map((e=>e.url))}]}),i}catch(r){throw new U}}}async watchAsset({address:e,decimals:t=18,image:n,symbol:s}){const i=this.getProvider();if(!i)throw new T;await i.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e,decimals:t,image:n,symbol:s}}})}}e=new WeakMap;const L=/(rainbow)/i;class R extends q{constructor(e){super(e),v(this,n),p(this,"id","walletConnect"),p(this,"name","WalletConnect"),p(this,"ready",!0),v(this,t,void 0),p(this,"onAccountsChanged",(e=>{0===e.length?this.emit("disconnect"):this.emit("change",{account:b.getAddress(e[0])})})),p(this,"onChainChanged",(e=>{const t=I(e),n=this.isChainUnsupported(t);this.emit("change",{chain:{id:t,unsupported:n}})})),p(this,"onDisconnect",(()=>{this.emit("disconnect")}))}async connect(){var e,t,i,r;try{const o=this.getProvider(!0);o.on("accountsChanged",this.onAccountsChanged),o.on("chainChanged",this.onChainChanged),o.on("disconnect",this.onDisconnect);const a=await o.enable(),c=b.getAddress(a[0]),h=await this.getChainId(),d=this.isChainUnsupported(h),l=null!=(i=null==(t=null==(e=o.connector)?void 0:e.peerMeta)?void 0:t.name)?i:"";return L.test(l)&&(this.switchChain=(r=s,g(this,n,"access private method"),r)),{account:c,chain:{id:h,unsupported:d},provider:new C(o)}}catch(o){if(/user closed modal/i.test(o.message))throw new D;throw o}}async disconnect(){const e=this.getProvider();await e.disconnect(),e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),"undefined"!=typeof localStorage&&localStorage.removeItem("walletconnect")}async getAccount(){const e=this.getProvider().accounts;return b.getAddress(e[0])}async getChainId(){const e=this.getProvider();return I(e.chainId)}getProvider(e){return w(this,t)&&!e||y(this,t,new E(this.options)),w(this,t)}async getSigner(){const e=this.getProvider(),t=await this.getAccount();return new C(e).getSigner(t)}async isAuthorized(){try{return!!(await this.getAccount())}catch{return!1}}}t=new WeakMap,n=new WeakSet,s=async function(e){const t=this.getProvider(),n=b.hexValue(e);try{await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]});return[...this.chains,...x].find((t=>t.id===e))}catch(s){const e="string"==typeof s?s:null==s?void 0:s.message;throw/user rejected request/i.test(e)?new D:new M}};class H extends q{constructor(e){super(e),p(this,"id","walletLink"),p(this,"name","Coinbase Wallet"),p(this,"ready","undefined"!=typeof window&&!(null==(i=window.ethereum)?void 0:i.isCoinbaseWallet)),v(this,r,void 0),v(this,o,void 0),p(this,"onAccountsChanged",(e=>{0===e.length?this.emit("disconnect"):this.emit("change",{account:b.getAddress(e[0])})})),p(this,"onChainChanged",(e=>{const t=I(e),n=this.isChainUnsupported(t);this.emit("change",{chain:{id:t,unsupported:n}})})),p(this,"onDisconnect",(()=>{this.emit("disconnect")}))}async connect(){try{const e=this.getProvider();e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect);const t=await e.enable(),n=b.getAddress(t[0]),s=await this.getChainId();return{account:n,chain:{id:s,unsupported:this.isChainUnsupported(s)},provider:new C(e)}}catch(e){if(/user closed modal/i.test(e.message))throw new D;throw e}}async disconnect(){if(!w(this,o))return;const e=this.getProvider();if(e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),e.disconnect(),e.close(),"undefined"!=typeof localStorage){let e=localStorage.length;for(;e--;){const t=localStorage.key(e);t&&(/-walletlink/.test(t)&&localStorage.removeItem(t))}}}async getAccount(){const e=this.getProvider(),t=await e.request({method:"eth_accounts"});return b.getAddress(t[0])}async getChainId(){const e=this.getProvider();return I(e.chainId)}getProvider(){return w(this,o)||(y(this,r,new A.WalletLink(this.options)),y(this,o,w(this,r).makeWeb3Provider(this.options.jsonRpcUrl))),w(this,o)}async getSigner(){const e=this.getProvider(),t=await this.getAccount();return new C(e).getSigner(t)}async isAuthorized(){try{return!!(await this.getAccount())}catch{return!1}}async switchChain(e){const t=this.getProvider(),n=b.hexValue(e);try{await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]});return[...this.chains,...x].find((t=>t.id===e))}catch(s){throw/user rejected signature request/i.test(s.message)?new D:new M}}}r=new WeakMap,o=new WeakMap;export{j as C,W as I,M as S,R as W,H as a,x as b};
